LIBRARY_NAME = @PACKAGE_NAME@
MCU ?= attiny45
F_CPU ?= 1000000UL
AVR_CC = avr-gcc
AVR_CFLAGS = -Os -Wall -DF_CPU=$(F_CPU) -mmcu=$(MCU) -c
AVR_LDFLAGS = -mmcu=$(MCU)
OBJS ?= main.o layer.o

AVRDUDEMCU = t45
AVRDUDEARGS = -c usbtiny -P usb 

SIM_CC = @CC@
SIM_CFLAGS = @CFLAGS@ @NCURSES_CFLAGS@ -DSIMULATION -Wall -c
SIM_LIBS = @LIBS@ @NCURSES_LIBS@
SIM_OBJS ?= main.o sim.o

ifdef NEEDS_FTDI
FTDI_LIBS = @FTDI_LIBS@
SIM_LIBS += $(FTDI_LIBS)
endif


CC = $(AVR_CC)
CFLAGS = $(AVR_CFLAGS)

# Patterns

%.o: %.c
	$(CC) $(CFLAGS) -o $@ $<

# Rules

.PHONY: send clean

all: $(PROGNAME).hex
	@echo Done!

send: $(PROGNAME).hex
	avrdude $(AVRDUDEARGS) -p $(AVRDUDEMCU) -U flash:w:$(PROGNAME).hex

clean:
	rm -f $(OBJS) $(PROGNAME).hex $(PROGNAME).bin $(SIM_OBJS) $(PROGNAME)

$(PROGNAME).bin: $(OBJS)
	$(AVR_CC) $(AVR_LDFLAGS) $+ -o $@

$(PROGNAME).hex: $(PROGNAME).bin
	avr-objcopy -O ihex -R .eeprom $< $@

# Simulation

.PHONY: sim

# we always want to run make on the ../.. to make sure we have a fresh lib.
$(PROGNAME): $(SIM_OBJS)
ifdef NEEDS_FTDI
ifndef FTDI_LIBS
	$(error icemu needs to be built with --enable-ftdi for this example)
endif
endif
	$(MAKE) -C ../..
	$(CC) -L../.. $(SIM_OBJS) -o $@ -l$(LIBRARY_NAME) $(SIM_LIBS)

sim: CC = $(SIM_CC)
sim: CFLAGS = $(SIM_CFLAGS)
sim: $(PROGNAME)
	@echo Done!

